@model IEnumerable<DawApp.Models.Cases>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
@if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Moderator")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Country
            </th>
            <th>
               Total Cases
            </th>
            <th>
                Total Recovered
            </th>
            <th>
                Total Deaths
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoCases)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoRecovered)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoDeath)
                </td>
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Moderator")))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CaseId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.CaseId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.CaseId">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
